{
.appVersion = "3343";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adieresis Adotbelow Agrave Ahookabove Amacron Aogonek Aring Atilde AE AEmacron B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcroat Ddotbelow Dmacronbelow Eth E Eacute Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehookabove Emacron Eogonek Etilde Schwa F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gmacron H Hbar Hbrevebelow Hcircumflex Hdotbelow I IJ Iacute Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihookabove Imacron Iogonek Itilde J Jacute Jcircumflex K Kcaron Kcommaaccent Kmacronbelow L Lacute Lcaron Lcommaaccent Ldot Ldotbelow Ldotbelowmacron Lmacronbelow Lslash M Mdotaccent Mdotbelow N Nacute Ncaron Ncommaaccent Ndotaccent Ndotbelow Nmacronbelow Ntilde O Oacute Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odieresis Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent Rdotbelowmacron Rmacronbelow S Sacute Scaron Scedilla Scircumflex Scommaaccent Sdotbelow Germandbls T Tcaron Tcedilla Tcommaaccent Tdotbelow Tmacronbelow U Uacute Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotaccent Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent Zdotbelow Zmacronbelow Saltillo Lslash.001 Lcommaaccent.loclMAH Ncommaaccent.loclMAH Ldot_comma A-cy Be-cy Ve-cy Ge-cy Gje-cy Geupturn-cy Gestroke-cy De-cy Ie-cy Iegrave-cy Io-cy Zhe-cy Ze-cy Ii-cy Iishort-cy Iigrave-cy Ka-cy Kje-cy El-cy Em-cy En-cy O-cy Pe-cy Er-cy Es-cy Te-cy U-cy Ushort-cy Ef-cy Ha-cy Tse-cy Che-cy Sha-cy Shcha-cy Dzhe-cy Softsign-cy Yeru-cy Hardsign-cy Lje-cy Nje-cy Dze-cy E-cy Ereversed-cy I-cy Yi-cy Je-cy Tshe-cy Yu-cy Ya-cy Dje-cy Yat-cy Fita-cy Izhitsa-cy Zhedescender-cy Zedescender-cy Kadescender-cy Endescender-cy Ustraight-cy Ustraightstroke-cy Hadescender-cy Chedescender-cy Shha-cy Palochka-cy Zhebreve-cy Abreve-cy Adieresis-cy Aie-cy Iebreve-cy Schwa-cy Schwadieresis-cy Zhedieresis-cy Zedieresis-cy Imacron-cy Idieresis-cy Odieresis-cy Obarred-cy Obarreddieresis-cy Edieresis-cy Umacron-cy Udieresis-cy Uhungarumlaut-cy Chedieresis-cy Yerudieresis-cy De-cy.loclBGR El-cy.loclBGR Ef-cy.loclBGR Alpha Beta Gamma Delta Epsilon Zeta Eta Theta Iota Kappa Lambda Mu Nu Xi Omicron Pi Rho Sigma Tau Upsilon Phi Chi Psi Omega Alphatonos Epsilontonos Etatonos Iotatonos Omicrontonos Upsilontonos Omegatonos Iotadieresis Upsilondieresis KaiSymbol";
name = Uppercase;
}
);
customParameters = (
{
name = "Export DSIG Table";
value = 0;
},
{
name = "Use Typo Metrics";
value = 1;
}
);
date = "2024-01-01 19:40:33 +0000";
familyName = "Arcticons Sans";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn MAH;
languagesystem latn CAT;
languagesystem latn NLD;

languagesystem cyrl dflt;
languagesystem cyrl BGR;
languagesystem cyrl MKD;
languagesystem cyrl SRB;

languagesystem hebr dflt;
languagesystem hebr IWR;
";
name = Languagesystems;
},
{
code = "";
name = ss03;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature subs;
feature sinf;
feature sups;
feature frac;
feature case;
feature fwid;
feature ss01;
feature ss02;
feature ss03;
feature ordn;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_DFLT_1 {
	@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
	lookupflag UseMarkFilteringSet @CombiningTopAccents;
	sub i' @CombiningTopAccents by idotless;
	sub j' @CombiningTopAccents by jdotless;
} ccmp_DFLT_1;

lookup ccmp_DFLT_2 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
} ccmp_DFLT_2;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub fi by f i;
	sub fl by f l;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "script latn;
language AZE;
lookup locl_latn_0 {
	sub i by idotaccent;
} locl_latn_0;
language CRT;
lookup locl_latn_0;
language KAZ;
lookup locl_latn_0;
language TAT;
lookup locl_latn_0;
language TRK;
lookup locl_latn_0;

script latn;
language ROM;
lookup locl_latn_1 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;
language MOL;
lookup locl_latn_1;

script latn;
language MAH;
lookup locl_latn_2 {
	sub Lcommaaccent by Lcommaaccent.loclMAH;
	sub Ncommaaccent by Ncommaaccent.loclMAH;
	sub lcommaaccent by lcommaaccent.loclMAH;
	sub ncommaaccent by ncommaaccent.loclMAH;
	sub commaaccentcomb by commaaccentcomb.loclMAH;
} locl_latn_2;

script latn;
language CAT;
lookup locl_latn_3 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_3;

script latn;
language NLD;
lookup locl_latn_4 {
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_4;

script cyrl;
language BGR;
lookup locl_cyrl_0 {
	sub De-cy by De-cy.loclBGR;
	sub El-cy by El-cy.loclBGR;
	sub Ef-cy by Ef-cy.loclBGR;
	sub ve-cy by ve-cy.loclBGR;
	sub ge-cy by ge-cy.loclBGR;
	sub de-cy by de-cy.loclBGR;
	sub zhe-cy by zhe-cy.loclBGR;
	sub ze-cy by ze-cy.loclBGR;
	sub ii-cy by ii-cy.loclBGR;
	sub iishort-cy by iishort-cy.loclBGR;
	sub ka-cy by ka-cy.loclBGR;
	sub el-cy by el-cy.loclBGR;
	sub pe-cy by pe-cy.loclBGR;
	sub te-cy by te-cy.loclBGR;
	sub tse-cy by tse-cy.loclBGR;
	sub sha-cy by sha-cy.loclBGR;
	sub shcha-cy by shcha-cy.loclBGR;
	sub softsign-cy by softsign-cy.loclBGR;
	sub hardsign-cy by hardsign-cy.loclBGR;
	sub yu-cy by yu-cy.loclBGR;
} locl_cyrl_0;

script cyrl;
language MKD;
lookup locl_cyrl_1 {
	sub gje-cy by gje-cy.loclMKD;
} locl_cyrl_1;

script cyrl;
language SRB;
lookup locl_cyrl_2 {
	sub be-cy by be-cy.loclSRB;
	sub ge-cy by ge-cy.loclSRB;
	sub de-cy by de-cy.loclSRB;
	sub pe-cy by pe-cy.loclSRB;
	sub te-cy by te-cy.loclSRB;
	sub sha-cy by sha-cy.loclSRB;
} locl_cyrl_2;

script cyrl;
language SRB;
lookup locl_cyrl_3 {
	sub ge-cy by ge-cy.loclSRBMKD;
	sub de-cy by de-cy.loclSRBMKD;
	sub pe-cy by pe-cy.loclSRBMKD;
	sub te-cy by te-cy.loclSRBMKD;
} locl_cyrl_3;
language MKD;
lookup locl_cyrl_3;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub one slash eight by oneeighth;
sub one slash four by onequarter;
sub three slash eight by threeeighths;
sub one slash two by onehalf;
sub five slash eight by fiveeighths;
sub three slash four by threequarters;
sub seven slash eight by seveneighths;
";
tag = frac;
},
{
automatic = 1;
code = "sub colon by colon.case;
sub bullet by bullet.case;
sub asterisk by asterisk.case;
sub hyphen by hyphen.case;
sub endash by endash.case;
sub emdash by emdash.case;
sub parenleft by parenleft.case;
sub parenright by parenright.case;
sub braceleft by braceleft.case;
sub braceright by braceright.case;
sub bracketleft by bracketleft.case;
sub bracketright by bracketright.case;
sub anglebracketleft by anglebracketleft.case;
sub anglebracketright by anglebracketright.case;
sub dblanglebracketleft by dblanglebracketleft.case;
sub dblanglebracketright by dblanglebracketright.case;
sub tortoiseshellbracketleft by tortoiseshellbracketleft.case;
sub tortoiseshellbracketright by tortoiseshellbracketright.case;
sub plus by plus.case;
sub minus by minus.case;
sub multiply by multiply.case;
sub divide by divide.case;
sub equal by equal.case;
sub notequal by notequal.case;
sub greater by greater.case;
sub less by less.case;
sub greaterequal by greaterequal.case;
sub lessequal by lessequal.case;
sub plusminus by plusminus.case;
sub approxequal by approxequal.case;
sub asciitilde by asciitilde.case;
";
tag = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub hyphen hyphen hyphen greater by hyphen_hyphen_hyphen_greater;
sub less equal equal greater by less_equal_equal_greater;
sub less hyphen hyphen hyphen by less_hyphen_hyphen_hyphen;
sub equal equal greater by equal_equal_greater;
sub f f t by f_f_t;
sub hyphen hyphen greater by hyphen_hyphen_greater;
sub hyphen hyphen hyphen by hyphen_hyphen_hyphen;
sub less equal equal by less_equal_equal;
sub less equal greater by less_equal_greater;
sub less hyphen greater by less_hyphen_greater;
sub less hyphen hyphen by less_hyphen_hyphen;
sub Ldot comma by Ldot_comma;
sub equal greater by equal_greater;
sub f t by f_t;
sub hyphen greater by hyphen_greater;
sub hyphen hyphen by hyphen_hyphen;
sub less equal by less_equal;
sub less hyphen by less_hyphen;
sub t t by t_t;
";
tag = dlig;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f f i by f_f_i;
sub f f l by f_f_l;
sub f f by f_f;
sub f i by fi;
sub f l by fl;
";
tag = liga;
},
{
automatic = 1;
code = "sub bar by bar.full;
";
tag = fwid;
},
{
automatic = 1;
code = "sub a by a.ss01;
sub aacute by aacute.ss01;
sub abreve by abreve.ss01;
sub abreveacute by abreveacute.ss01;
sub abrevedotbelow by abrevedotbelow.ss01;
sub abrevegrave by abrevegrave.ss01;
sub abrevehookabove by abrevehookabove.ss01;
sub abrevetilde by abrevetilde.ss01;
sub acaron by acaron.ss01;
sub acircumflex by acircumflex.ss01;
sub acircumflexacute by acircumflexacute.ss01;
sub acircumflexdotbelow by acircumflexdotbelow.ss01;
sub acircumflexgrave by acircumflexgrave.ss01;
sub acircumflexhookabove by acircumflexhookabove.ss01;
sub acircumflextilde by acircumflextilde.ss01;
sub adieresis by adieresis.ss01;
sub adotbelow by adotbelow.ss01;
sub agrave by agrave.ss01;
sub ahookabove by ahookabove.ss01;
sub amacron by amacron.ss01;
sub aogonek by aogonek.ss01;
sub aring by aring.ss01;
sub atilde by atilde.ss01;
";
labels = (
{
language = dflt;
value = "Single storey a";
}
);
tag = ss01;
},
{
automatic = 1;
code = "sub e by e.ss02;
sub eacute by eacute.ss02;
sub ecaron by ecaron.ss02;
sub ecircumflex by ecircumflex.ss02;
sub ecircumflexacute by ecircumflexacute.ss02;
sub ecircumflexdotbelow by ecircumflexdotbelow.ss02;
sub ecircumflexgrave by ecircumflexgrave.ss02;
sub ecircumflexhookabove by ecircumflexhookabove.ss02;
sub ecircumflextilde by ecircumflextilde.ss02;
sub edieresis by edieresis.ss02;
sub edotaccent by edotaccent.ss02;
sub edotbelow by edotbelow.ss02;
sub egrave by egrave.ss02;
sub ehookabove by ehookabove.ss02;
sub emacron by emacron.ss02;
sub eogonek by eogonek.ss02;
sub etilde by etilde.ss02;
";
labels = (
{
language = dflt;
value = "Alternate e";
}
);
tag = ss02;
},
{
automatic = 1;
code = "sub y by y.ss03;
sub yacute by yacute.ss03;
sub ycircumflex by ycircumflex.ss03;
sub ydieresis by ydieresis.ss03;
sub ydotaccent by ydotaccent.ss03;
sub ydotbelow by ydotbelow.ss03;
sub ygrave by ygrave.ss03;
sub yhookabove by yhookabove.ss03;
sub ymacron by ymacron.ss03;
sub ytilde by ytilde.ss03;
";
labels = (
{
language = dflt;
value = "Alternate y";
}
);
tag = ss03;
},
{
code = "";
disabled = 1;
tag = smcp;
},
{
code = "";
tag = calt;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
}
);
fontMaster = (
{
axesValues = (
400
);
iconName = SemiBold;
id = m002;
metricValues = (
{
pos = 1140;
},
{
pos = 900;
},
{
pos = 630;
},
{
},
{
pos = -270;
}
);
name = Regular;
userData = {
GSCornerRadius = 3;
};
}
);
instances = (
{
axesValues = (
400
);
customParameters = (
{
name = "TTFAutohint options";
value = "--windows-compatibility";
}
);
instanceInterpolations = {
m002 = 1;
};
name = Regular;
}
);
kerningLTR = {
m002 = {
"@MMK_L_0" = {
"@MMK_R_lowercaseRound" = -70;
i = -20;
t = -10;
y = -20;
};
"@MMK_L_A" = {
"@MMK_R_A" = 0;
"@MMK_R_S" = -40;
"@MMK_R_f" = -120;
"@MMK_R_i" = -40;
"@MMK_R_lowerT" = -120;
"@MMK_R_lowercaseRound" = -70;
"@MMK_R_lowercaseStraight" = -10;
T = -190;
U = -50;
W = -140;
bracketright = -50;
epsilontonos = -30;
j = -200;
l = -40;
parenright = -70;
s = -40;
u = -40;
v = -120;
w = -140;
};
"@MMK_L_S" = {
"@MMK_R_f" = -70;
"@MMK_R_lowercaseX" = -70;
"@MMK_R_uppercaseStraight" = 0;
T = -50;
j = -200;
};
"@MMK_L_T" = {
"@MMK_R_lowercaseRound" = -150;
"@MMK_R_lowercaseStraight" = -150;
"@MMK_R_lowercaseStraightDecender" = -150;
"@MMK_R_lowercaseX" = -150;
"@MMK_R_u" = -150;
y = -150;
z = -150;
};
"@MMK_L_colon" = {
"@MMK_R_uppercaseRound" = -20;
eight = -10;
four = -30;
seven = -60;
};
"@MMK_L_ç" = {
"tsadiFinal-hb" = -60;
};
"@MMK_L_dash" = {
U = -60;
V = -160;
W = -110;
Y = -160;
bracketright = -50;
};
"@MMK_L_dot" = {
"@MMK_R_dot" = -30;
"@MMK_R_lowercaseRound" = -60;
"@MMK_R_parenthesis" = -30;
"@MMK_R_uppercaseRound" = -50;
W = -50;
bracketright = -30;
one = -40;
seven = -120;
three = -39;
w = -50;
};
"@MMK_L_f" = {
"@MMK_R_A" = -200;
"@MMK_R_S" = -40;
"@MMK_R_dot" = -150;
"@MMK_R_f" = -130;
"@MMK_R_lowercaseRound" = -200;
"@MMK_R_lowercaseStraight" = -130;
"@MMK_R_lowercaseStraightDecender" = -130;
"@MMK_R_lowercaseX" = -130;
"@MMK_R_uppercaseDiagonal" = -20;
"@MMK_R_uppercaseRound" = -30;
"@MMK_R_uppercaseStraight" = -10;
J = -130;
T = -10;
four = -170;
j = -200;
question = -30;
s = -140;
u = -110;
w = -130;
z = -130;
};
"@MMK_L_hebrewRound" = {
"@MMK_R_hebrewStraight" = 10;
"dalet-hb" = -80;
"lamed-hb" = -90;
"maqaf-hb" = -70;
};
"@MMK_L_hebrewRounded" = {
"@MMK_R_dot" = -30;
"@MMK_R_hebrewStraight" = 10;
"lamed-hb" = -60;
"nunFinal-hb" = -30;
"samekh-hb" = -50;
"vav-hb" = 20;
};
"@MMK_L_i" = {
"@MMK_R_A" = -40;
"@MMK_R_i" = 10;
"@MMK_R_lowercaseRound" = -20;
"@MMK_R_lowercaseStraight" = -10;
"@MMK_R_uppercaseDiagonal" = -10;
T = -20;
bracketright = -10;
f = -30;
jdotless = -70;
v = -50;
z = -20;
};
"@MMK_L_lowerT" = {
"@MMK_R_lowerT" = -60;
"@MMK_R_lowercaseRound" = -70;
"@MMK_R_lowercaseStraight" = -30;
"@MMK_R_lowercaseStraightAscender" = -10;
"@MMK_R_u" = -40;
Y = -160;
l = -30;
parenright = -50;
u = -50;
z = -20;
};
"@MMK_L_lowercaseDescender" = {
"@MMK_R_lowercaseRound" = -20;
T = -240;
Y = -120;
j = -60;
};
"@MMK_L_lowercaseHorn" = {
"@MMK_R_T" = -30;
"@MMK_R_dash" = -120;
"@MMK_R_dot" = -30;
"@MMK_R_f" = 80;
"@MMK_R_i" = -20;
"@MMK_R_lowerT" = -40;
"@MMK_R_lowercaseAscender" = -10;
"@MMK_R_lowercaseRound" = -80;
"@MMK_R_lowercaseStraight" = -30;
"@MMK_R_lowercaseStraightAscender" = -10;
"@MMK_R_lowercaseStraightDecender" = -30;
"@MMK_R_lowercaseU" = 70;
"@MMK_R_lowercaseX" = -10;
"@MMK_R_u" = -30;
"@MMK_R_uppercaseDiagonal" = -40;
"@MMK_R_uppercaseStraight" = -20;
at = -10;
exclam = -30;
j = -110;
numbersign = -40;
ohorndotbelow = 10;
s = -63;
uhorn = 0;
uhornacute = 60;
uogonek = 80;
y = -30;
z = -10;
};
"@MMK_L_lowercaseRound" = {
"@MMK_R_T" = -150;
"@MMK_R_dot" = -70;
"@MMK_R_f" = -60;
"@MMK_R_lowerT" = -60;
"@MMK_R_lowercaseRound" = -30;
"@MMK_R_lowercaseStraight" = -10;
"@MMK_R_lowercaseStraightAscender" = -10;
"@MMK_R_lowercaseX" = -60;
"@MMK_R_quote" = -20;
X = -80;
Y = -200;
bracketright = -90;
"de-cy" = -80;
delta = 30;
"el-cy" = -60;
epsilon = -20;
"er-cy" = -10;
exclam = -50;
i = -30;
j = -220;
lambda = -120;
nu = -50;
parenright = -90;
pi = -60;
question = -80;
quotedblbase = -80;
quotesinglbase = -80;
rho = -30;
s = -10;
sigma = -40;
slash = -100;
t = -60;
tau = -110;
"te-cy" = -70;
u = -10;
"u-cy" = -20;
v = -50;
w = -50;
x = -60;
z = -70;
"ze-cy" = -30;
};
"@MMK_L_lowercaseRounding" = {
"@MMK_R_colon" = -10;
"@MMK_R_dash" = -20;
"@MMK_R_i" = 0;
"@MMK_R_lowerT" = -60;
"@MMK_R_lowercaseRound" = -5;
"@MMK_R_lowercaseX" = -10;
"@MMK_R_parenthesis" = -40;
"@MMK_R_quote" = -50;
T = -150;
Y = -200;
comma = -40;
j = -210;
parenright = -40;
period = -40;
s = -20;
slash = -40;
};
"@MMK_L_lowercaseStraight" = {
"@MMK_R_A" = -10;
"@MMK_R_T" = -150;
"@MMK_R_dot" = -30;
"@MMK_R_lowercaseAscender" = 10;
"@MMK_R_lowercaseRound" = -20;
"@MMK_R_lowercaseStraight" = 10;
"@MMK_R_lowercaseStraightAscender" = 10;
"@MMK_R_lowercaseU" = 0;
"@MMK_R_quote" = 20;
Y = -120;
bracketright = -60;
"de-cy" = 0;
"el-cy" = -20;
epsilon = -20;
i = 0;
"i-cy" = 0;
j = -210;
k = 20;
quotedblbase = -50;
quotesinglbase = -50;
slash = -50;
t = -20;
"te-cy" = -10;
w = -10;
z = 20;
};
"@MMK_L_lowercaseStraightAscender" = {
"@MMK_R_f" = -10;
acircumflextilde = -20;
bracketright = 0;
imacron = 110;
j = -190;
w = -10;
};
"@MMK_L_lowercaseStraightDecender" = {
"@MMK_R_T" = -150;
"@MMK_R_dot" = -20;
"@MMK_R_lowercaseRound" = -20;
Y = -130;
bracketright = -20;
ecircumflexgrave = -20;
j = 20;
one = -20;
question = -30;
slash = -10;
};
"@MMK_L_lowercaseX" = {
"@MMK_R_T" = -150;
"@MMK_R_lowerT" = -20;
"@MMK_R_lowercaseAscender" = -10;
"@MMK_R_lowercaseRound" = -60;
"@MMK_R_quote" = -20;
Y = -140;
bracketright = -70;
hyphen = -80;
j = -120;
"ustraight-cy" = -20;
};
"@MMK_L_lowercaseX0" = {
"@MMK_R_lowercaseX" = -10;
j = -120;
};
"@MMK_L_parenthesis" = {
"@MMK_R_A" = -50;
"@MMK_R_S" = -40;
"@MMK_R_dash" = -50;
"@MMK_R_i" = -10;
"@MMK_R_lowercaseRound" = -90;
"@MMK_R_lowercaseStraight" = -40;
"@MMK_R_lowercaseX" = -70;
"@MMK_R_uppdercaseStraight" = 0;
"@MMK_R_uppercaseRound" = -70;
V = -20;
eight = -50;
f = -130;
four = -120;
j = -20;
one = -50;
parenleft = -90;
s = -90;
two = -50;
v = -90;
y = -60;
z = -90;
};
"@MMK_L_quote" = {
"@MMK_R_A" = -140;
"@MMK_R_dot" = -20;
"@MMK_R_lowerT" = -40;
"@MMK_R_lowercaseRound" = -40;
"@MMK_R_quote" = 20;
"@MMK_R_tonosCase" = 170;
"@MMK_R_uppdercaseStraight" = 40;
"@MMK_R_uppercaseRound" = -50;
"@MMK_R_uppercaseStraight" = 20;
Rho = 10;
icircumflex = 50;
igrave = 80;
one = 10;
s = -110;
};
"@MMK_L_straightLine" = {
"@MMK_R_uppdercaseStraight" = 0;
};
"@MMK_L_uppdercaseStraight" = {
"@MMK_R_uppdercaseStraight" = 20;
S = 0;
epsilon = 10;
};
"@MMK_L_uppercaseDiagonal" = {
"@MMK_R_f" = -110;
"@MMK_R_lowercaseStraightDecender" = -140;
j = -180;
};
"@MMK_L_uppercaseHorn" = {
"@MMK_R_T" = -20;
"@MMK_R_U" = -28;
};
"@MMK_L_uppercaseRound" = {
"@MMK_R_A" = -50;
"@MMK_R_colon" = -20;
"@MMK_R_dot" = -90;
"@MMK_R_f" = -40;
"@MMK_R_lowercaseRound" = -10;
T = -70;
V = -40;
bracketright = -70;
degree = -40;
four = -10;
i = -20;
imacron = 20;
j = -200;
pi = 0;
slash = -120;
underscore = -60;
y = -10;
};
"@MMK_L_uppercaseStraight" = {
"@MMK_R_colon" = -10;
"@MMK_R_dot" = -30;
"@MMK_R_f" = -40;
"@MMK_R_i" = 10;
"@MMK_R_lowercaseRound" = -10;
"@MMK_R_uppdercaseStraight" = 20;
j = -200;
};
A = {
A = -20;
C = -60;
G = -50;
N = -30;
P = -20;
R = -10;
S = -60;
V = -140;
Y = -150;
};
"A-cy" = {
"el-cy" = -20;
};
Alpha = {
delta = -50;
gamma = -70;
};
B = {
"@MMK_R_dot" = -60;
"@MMK_R_f" = -50;
"@MMK_R_lowercaseStraight" = -20;
A = -40;
Y = -50;
bracketright = -60;
j = -220;
};
"Be-cy" = {
"@MMK_R_lowercaseRound" = -20;
"ustraightstroke-cy" = -80;
};
C = {
A = -60;
T = -70;
};
D = {
O = -10;
};
"De-cy" = {
"@MMK_R_lowercaseRound" = -70;
"u-cy" = -60;
};
Delta = {
"@MMK_R_lowercaseRound" = -50;
};
E = {
"@MMK_R_f" = -80;
"@MMK_R_lowercaseRound" = -60;
"@MMK_R_lowercaseStraight" = -20;
"@MMK_R_lowercaseX" = -20;
"@MMK_R_uppercaseRound" = -50;
A = -20;
G = -70;
O = -60;
S = -50;
l = -20;
s = -50;
u = -60;
v = -90;
};
"Ef-cy" = {
"@MMK_R_lowercaseRound" = -40;
};
Egrave = {
v = -60;
};
"Endescender-cy" = {
"Hadescender-cy" = -10;
};
Epsilon = {
"@MMK_R_lowercaseRound" = -60;
"@MMK_R_lowercaseStraight" = -20;
"@MMK_R_tonosCase" = 180;
kappa = -10;
tau = -150;
};
Epsilontonos = {
"@MMK_R_tonosCase" = 150;
};
"Er-cy" = {
"@MMK_R_lowercaseRound" = -60;
};
"Es-cy" = {
"@MMK_R_lowercaseRound" = -10;
};
Etatonos = {
Iotatonos = 200;
};
F = {
"@MMK_R_dash" = -100;
"@MMK_R_f" = -110;
"@MMK_R_i" = -20;
"@MMK_R_lowercaseRound" = -160;
"@MMK_R_lowercaseStraight" = -120;
"@MMK_R_uppercaseRound" = -70;
A = -180;
b = -20;
four = -190;
j = -200;
three = -10;
two = -80;
};
Gamma = {
Delta = -250;
};
"Ge-cy" = {
"@MMK_R_lowercaseStraight" = -210;
};
"Gestroke-cy" = {
"@MMK_R_lowercaseStraight" = -110;
};
"Hadescender-cy" = {
"Chedescender-cy" = -110;
};
"Ie-cy" = {
"@MMK_R_lowercaseRound" = -70;
"te-cy" = -170;
"u-cy" = -60;
"ya-cy" = -20;
};
"Ii-cy" = {
"de-cy" = -20;
};
Iota = {
Kappa = -20;
};
Iotadieresis = {
Upsilondieresis = 100;
};
Iotatonos = {
"@MMK_R_tonosCase" = 120;
};
J = {
"@MMK_R_f" = -40;
"@MMK_R_i" = -40;
"@MMK_R_lowercaseRound" = -20;
};
K = {
"@MMK_R_lowercaseRound" = -50;
v = -120;
w = -110;
};
"Ka-cy" = {
"@MMK_R_lowercaseRound" = -60;
};
"Kadescender-cy" = {
"@MMK_R_lowercaseRound" = -60;
"Endescender-cy" = -10;
};
L = {
"@MMK_R_f" = -110;
"@MMK_R_i" = -40;
"@MMK_R_lowerT" = -120;
"@MMK_R_lowercaseRound" = -60;
"@MMK_R_lowercaseStraight" = -20;
"@MMK_R_lowercaseStraightAscender" = -20;
"@MMK_R_lowercaseX" = -40;
"@MMK_R_uppercaseRound" = -70;
A = -40;
S = -60;
T = -200;
U = -80;
V = -240;
W = -170;
Y = -250;
bracketright = -50;
j = -200;
s = -20;
v = -170;
y = -60;
};
N = {
S = -10;
};
O = {
S = -10;
W = -40;
Y = -70;
};
OE = {
u = -60;
};
Omega = {
"@MMK_R_uppercaseStraight" = 10;
rho = 10;
};
Omicron = {
Pi = 10;
};
Omicrontonos = {
"@MMK_R_tonosCase" = 160;
};
P = {
"@MMK_R_dot" = -140;
"@MMK_R_f" = -40;
"@MMK_R_lowercaseRound" = -60;
"@MMK_R_uppdercaseStraight" = -10;
"@MMK_R_uppercaseRound" = -40;
A = -140;
bracketright = -60;
exclam = -50;
j = -200;
};
Phi = {
Chi = -130;
};
Pi = {
Rho = 10;
};
Q = {
Y = -70;
bracketright = -60;
j = -200;
};
R = {
"@MMK_R_f" = -30;
"@MMK_R_i" = -20;
"@MMK_R_lowercaseRound" = -50;
A = -30;
S = -20;
T = -70;
bracketright = -60;
};
Rho = {
"@MMK_R_lowercaseRound" = -50;
Sigma = -80;
};
S = {
"@MMK_R_lowercaseRound" = -30;
A = -60;
Z = -30;
i = -40;
t = -80;
w = -80;
};
"Schwa-cy" = {
"el-cy" = -60;
};
Sigma = {
"@MMK_R_lowercaseRound" = -80;
epsilon = -60;
};
T = {
"@MMK_R_S" = -50;
"@MMK_R_dash" = -160;
"@MMK_R_f" = -130;
"@MMK_R_i" = -20;
"@MMK_R_lowerT" = -90;
"@MMK_R_lowercaseStraightAscender" = -20;
"@MMK_R_o" = 0;
"@MMK_R_uppercaseRound" = -80;
A = -150;
T = -20;
abrevetilde = -80;
ahookabove = -140;
atilde = -50;
e = -260;
eight = -40;
four = -170;
j = -210;
ocircumflextilde = -110;
ohookabove = -130;
otilde = -50;
plus = -160;
s = -270;
two = -30;
w = -240;
};
Tau = {
"@MMK_R_lowercaseStraight" = -160;
epsilon = -220;
};
"Te-cy" = {
"@MMK_R_lowercaseRound" = -240;
"i-cy" = -20;
};
Theta = {
Iota = 10;
};
"Tse-cy" = {
"u-cy" = -60;
};
U = {
"@MMK_R_U" = 0;
"@MMK_R_f" = -40;
};
Upsilon = {
"@MMK_R_A" = -150;
Phi = -150;
lambda = -10;
};
Upsilontonos = {
"@MMK_R_tonosCase" = 20;
};
"Ustraightstroke-cy" = {
"el-cy" = -100;
};
V = {
"@MMK_R_dash" = -160;
"@MMK_R_dot" = -130;
"@MMK_R_lowercaseRound" = -160;
"@MMK_R_lowercaseStraight" = -100;
"@MMK_R_uppercaseRound" = -70;
A = -150;
bracketright = -20;
epsilon = -150;
i = -40;
};
W = {
"@MMK_R_A" = -140;
"@MMK_R_dash" = -110;
"@MMK_R_dot" = -50;
"@MMK_R_lowerT" = -80;
"@MMK_R_lowercaseRound" = -110;
"@MMK_R_lowercaseStraight" = -70;
"@MMK_R_lowercaseStraightAscender" = -10;
i = -40;
};
X = {
"@MMK_R_lowerT" = -120;
"@MMK_R_lowercaseRound" = -70;
};
Y = {
"@MMK_R_dash" = -160;
"@MMK_R_i" = -30;
"@MMK_R_lowerT" = -130;
"@MMK_R_lowercaseRound" = -200;
"@MMK_R_lowercaseStraight" = -140;
"@MMK_R_lowercaseStraightAscender" = -20;
"@MMK_R_lowercaseX" = -150;
"@MMK_R_uppdercaseStraight" = -10;
A = -150;
O = -70;
Q = -70;
S = -50;
s = -180;
u = -150;
v = -150;
w = -150;
y = -150;
z = -150;
};
Ydieresis = {
"tsadiFinal-hb" = -30;
};
Z = {
"@MMK_R_lowercaseRound" = -90;
"@MMK_R_uppercaseRound" = -80;
A = -30;
};
"Zhe-cy" = {
"@MMK_R_lowercaseRound" = -30;
};
"Zhedescender-cy" = {
"Kadescender-cy" = -10;
};
a = {
f = -20;
p = 0;
};
"a-cy" = {
"el-cy" = 10;
"endescender-cy" = 30;
};
abrevetilde = {
T = -80;
};
"alef-hb" = {
"@MMK_R_dot" = -40;
"vav-hb" = 20;
};
alpha = {
"@MMK_R_lowercaseRound" = -50;
"@MMK_R_lowercaseStraight" = -40;
"@MMK_R_parenthesis" = -10;
delta = -20;
epsilon = -30;
gamma = -80;
iotatonos = -20;
lambda = -80;
nu = -50;
pi = -110;
sigmafinal = -30;
tau = -100;
xi = -50;
};
asciitilde = {
asciitilde = 0;
slash = -30;
};
"ayin-hb" = {
"yod-hb" = 0;
};
"be-cy" = {
"@MMK_R_lowercaseRound" = -30;
"el-cy" = -70;
"i-cy" = -40;
"u-cy" = -30;
};
"bet-hb" = {
"@MMK_R_dot" = -20;
"resh-hb" = -140;
};
beta = {
epsilon = -30;
lambda = -30;
};
braceright.case = {
T = -100;
};
c = {
"@MMK_R_lowercaseRound" = -30;
T = -240;
Y = -210;
alpha = -20;
endash = -20;
epsilon = -30;
i = -30;
j = -120;
u = -30;
};
chi = {
"@MMK_R_lowercaseRound" = -110;
};
colon = {
parenright = -50;
};
d = {
e = -20;
o = -10;
};
"dalet-hb" = {
"resh-hb" = 60;
"tav-hb" = -10;
};
dcroat = {
"@MMK_R_i" = 20;
"@MMK_R_lowercaseRound" = 20;
igrave = 80;
};
"de-cy" = {
"@MMK_R_lowercaseRound" = -70;
"@MMK_R_lowercaseStraight" = 10;
"u-cy" = -60;
};
"de-cy.loclSRB" = {
"pe-cy.loclSRB" = -10;
};
degree = {
"@MMK_R_uppercaseRound" = -40;
eight = -30;
one = -10;
two = -50;
};
delta = {
"@MMK_R_lowercaseStraight" = 0;
epsilon = -40;
};
e = {
d = -30;
k = -20;
n = -10;
r = -10;
s = -30;
};
ecircumflexacute = {
"@MMK_R_lowerT" = -60;
};
eight = {
"@MMK_R_colon" = -10;
T = -40;
bracketright = -50;
degree = -30;
four = -20;
parenright = -50;
seven = -40;
};
epsilon = {
"@MMK_R_dot" = -50;
"@MMK_R_lowercaseRound" = -70;
"@MMK_R_parenthesis" = -40;
alpha = -40;
delta = -50;
lambda = -100;
phi = -70;
pi = -30;
rho = -10;
tau = -20;
v = -30;
xi = -40;
};
epsilontonos = {
phi = -30;
};
"es-cy" = {
"@MMK_R_dot" = -50;
"@MMK_R_lowercaseRound" = -20;
"te-cy" = -40;
"u-cy" = -20;
};
eta = {
"@MMK_R_lowercaseRound" = -10;
};
exclam = {
question = -30;
};
f = {
"@MMK_R_lowercaseStraightAscender" = -10;
"@MMK_R_uppercaseRound" = -60;
a = -200;
f = -130;
i = -50;
k = -20;
l = -10;
t = -130;
u = -130;
v = -130;
y = -130;
};
f_f_l = {
"@MMK_R_f" = -110;
};
five = {
"@MMK_R_colon" = -50;
"@MMK_R_dot" = -78;
degree = -30;
five = 10;
j = -200;
one = -10;
seven = 0;
six = -11;
};
fiveinferior = {
sixinferior = -10;
};
fl = {
"@MMK_R_lowercaseRound" = -70;
};
four = {
"@MMK_R_colon" = -40;
T = -30;
bracketright = -80;
five = -40;
j = -200;
nine = -20;
one = -50;
seven = -60;
three = -20;
two = -20;
zero = 0;
};
foursuperior = {
fivesuperior = -10;
};
g = {
i = -10;
};
gamma = {
"@MMK_R_lowercaseRound" = -60;
alphatonos = -30;
rho = -20;
};
"ge-cy.loclSRB" = {
"de-cy.loclSRB" = -150;
};
"gestroke-cy" = {
"@MMK_R_lowercaseRound" = -60;
};
hyphen = {
"@MMK_R_lowercaseRound" = -20;
U = 10;
three = -70;
};
i = {
e = -40;
g = -30;
j = -70;
l = 0;
p = 0;
period = -60;
s = -30;
t = -20;
x = -20;
};
"i-cy" = {
"@MMK_R_dot" = -60;
"el-cy" = -10;
"ka-cy" = -20;
"te-cy" = -40;
"yi-cy" = 110;
};
iacute = {
"@MMK_R_lowercaseStraightAscender" = 100;
"@MMK_R_quote" = 80;
itilde = 164;
};
icircumflex = {
"@MMK_R_quote" = 50;
};
igrave = {
"@MMK_R_quote" = 0;
};
"iishort-cy" = {
"te-cy" = -10;
};
iota = {
"@MMK_R_dot" = -50;
"@MMK_R_lowercaseRound" = -50;
"@MMK_R_lowercaseStraight" = -30;
"@MMK_R_parenthesis" = -30;
delta = -50;
epsilon = -30;
gamma = -120;
lambda = -70;
nu = -150;
omicrontonos = -40;
pi = -60;
rho = -20;
sigma = -60;
tau = -140;
};
iotatonos = {
"@MMK_R_lowercaseRound" = -50;
"@MMK_R_quote" = -20;
delta = -20;
};
j = {
"@MMK_R_lowercaseRound" = -30;
n = 10;
};
k = {
"@MMK_R_T_lower" = -80;
"@MMK_R_dot" = -40;
"@MMK_R_lowercaseRound" = -80;
"@MMK_R_lowercaseStraight" = -20;
"@MMK_R_lowercaseStraightAscender" = 10;
T = -240;
Y = -140;
comma = -30;
i = -60;
j = -210;
l = -40;
o = -80;
oslash = -30;
s = -60;
t = -60;
u = -40;
w = -50;
};
"ka-cy" = {
"@MMK_R_lowercaseRound" = -60;
"te-cy" = -10;
};
"kadescender-cy" = {
"@MMK_R_lowercaseRound" = -60;
"te-cy" = -120;
};
"kafFinal-hb" = {
"@MMK_R_dot" = -20;
};
kappa = {
lambda = -40;
};
l = {
"@MMK_R_lowercaseAscender" = -40;
"@MMK_R_lowercaseRound" = -70;
"@MMK_R_lowercaseStraight" = -20;
"@MMK_R_lowercaseStraightAscender" = -50;
"@MMK_R_lowercaseStraightDecender" = -10;
T = -120;
Y = -120;
a = -80;
endash = -40;
f = -130;
hyphen = -70;
i = -40;
j = -220;
s = -40;
t = -100;
u = -70;
v = -100;
w = -100;
y = -60;
};
lambda = {
"@MMK_R_lowercaseRound" = -40;
"@MMK_R_lowercaseStraight" = -40;
alpha = -40;
epsilon = -30;
epsilontonos = -30;
lambda = -90;
phi = -60;
theta = -80;
};
less = {
"@MMK_R_lowercaseRound" = -60;
};
m = {
"@MMK_R_lowercaseRound" = -10;
};
"mem-hb" = {
"nunFinal-hb" = -10;
"tav-hb" = -10;
};
n = {
i = -30;
};
nine = {
five = 10;
nine = 0;
one = -20;
seven = -90;
three = -20;
zero = 0;
};
nu = {
"@MMK_R_dot" = -150;
"@MMK_R_lowercaseRound" = -70;
alpha = -50;
delta = -110;
epsilon = -50;
sigma = -70;
};
o = {
r = 0;
s = -30;
};
ohorn = {
"@MMK_R_lowercaseRound" = -70;
};
omega = {
tau = -20;
};
one = {
four = -10;
two = 20;
zero = 10;
};
oslash = {
"@MMK_R_lowercaseRound" = -10;
};
p = {
e = -10;
p = -10;
u = -20;
};
parenleft = {
w = -100;
};
parenright = {
"@MMK_R_dot" = -60;
whitelenticularbracketright = 50;
};
"pe-cy.loclSRB" = {
"te-cy.loclSRB" = -10;
};
period = {
five = -50;
};
phi = {
"@MMK_R_lowercaseRound" = -30;
epsilon = -40;
};
pi = {
"@MMK_R_lowercaseRound" = -60;
"@MMK_R_parenthesis" = -30;
epsilon = -20;
lambda = -90;
pi = -30;
};
q = {
j = 80;
};
question = {
exclam = -40;
questiondown = -160;
};
questiondown = {
question = -160;
};
quotedbl = {
"@MMK_R_lowercaseRound" = -70;
};
quotesingle = {
s = -30;
};
r = {
"@MMK_R_dot" = -120;
"@MMK_R_lowerT" = -20;
"@MMK_R_lowercaseRound" = -50;
"@MMK_R_lowercaseStraight" = -20;
"@MMK_R_lowercaseStraightAscender" = -10;
"@MMK_R_lowercaseStraightDecender" = -10;
"@MMK_R_lowercaseX" = -40;
"@MMK_R_parenthesis" = -30;
"@MMK_R_quote" = 10;
T = -150;
Y = -130;
bracketright = -30;
d = -70;
e = -80;
exclam = -50;
i = -30;
j = -120;
o = -60;
s = -50;
uhorn = 0;
};
s = {
"@MMK_R_dot" = -50;
"@MMK_R_i" = 0;
"@MMK_R_lowerT" = -50;
"@MMK_R_lowercaseRound" = -30;
"@MMK_R_lowercaseStraight" = -20;
"@MMK_R_lowercaseStraightAscender" = -10;
"@MMK_R_lowercaseStraightDecender" = -30;
"@MMK_R_parenthesis" = -30;
T = -240;
Y = -170;
a = -50;
bracketright = -90;
f = -40;
j = -220;
period = -50;
s = -30;
v = -20;
};
"schwa-cy" = {
"de-cy" = -70;
};
seven = {
"@MMK_R_colon" = -60;
"@MMK_R_dot" = -61;
"@MMK_R_lowerT" = -30;
"@MMK_R_uppercaseStraight" = 10;
degree = -20;
eight = -40;
four = -120;
j = -180;
nine = -40;
six = -40;
two = -40;
zero = -40;
};
sevensuperior = {
eightsuperior = -10;
};
sigma = {
"@MMK_R_dot" = -130;
"@MMK_R_lowercaseRound" = -80;
"@MMK_R_lowercaseStraight" = -30;
epsilon = -40;
sigma = -30;
tau = -20;
};
six = {
eight = -10;
nine = -20;
seven = -40;
};
sixinferior = {
seveninferior = -30;
};
sixsuperior = {
sevensuperior = -30;
};
slash = {
"@MMK_R_lowercaseRound" = -100;
"@MMK_R_lowercaseStraightAscender" = -10;
"@MMK_R_lowercaseStraightDecender" = -100;
"@MMK_R_lowercaseX" = -60;
"@MMK_R_uppercaseRound" = -50;
asciitilde = -30;
v = -80;
};
space = {
"Be-cy" = -10;
L = 0;
};
t = {
"@MMK_R_dot" = -40;
"@MMK_R_uppercaseRound" = -40;
T = -120;
f = -50;
i = -30;
j = -150;
s = -40;
v = -30;
w = -30;
y = -30;
};
tau = {
"@MMK_R_lowercaseRound" = -40;
epsilon = -20;
epsilontonos = -20;
};
"tav-hb" = {
"@MMK_R_dot" = -40;
"@MMK_R_hebrewStraight" = 10;
"yod-hb" = 10;
};
"te-cy" = {
"@MMK_R_lowercaseRound" = -70;
"@MMK_R_lowercaseStraight" = -10;
"i-cy" = -30;
"u-cy" = -30;
};
"te-cy.loclSRB" = {
"sha-cy.loclSRB" = -10;
};
theta = {
"@MMK_R_lowercaseStraight" = -10;
};
three = {
"@MMK_R_colon" = -30;
"@MMK_R_dot" = -90;
T = -40;
degree = -30;
four = -10;
j = -200;
nine = -20;
seven = -40;
three = -20;
};
three.ss01 = {
three = -20;
};
threeinferior = {
fourinferior = -10;
};
threesuperior = {
foursuperior = -10;
};
"tsadi-hb" = {
"resh-hb" = 60;
};
"tse-cy" = {
"@MMK_R_dot" = -30;
"@MMK_R_lowercaseRound" = -80;
"@MMK_R_lowercaseStraight" = -10;
"te-cy" = -110;
"u-cy" = -30;
};
two = {
"@MMK_R_uppercaseStraight" = 0;
T = -30;
bracketright = -40;
degree = -50;
four = -40;
j = -200;
one = -20;
plus = -60;
seven = -50;
three = -10;
three.ss01 = -20;
};
twoinferior = {
threeinferior = -10;
};
underscore = {
"@MMK_R_uppercaseRound" = -60;
};
upsilontonos = {
chi = -30;
};
"ustraightstroke-cy" = {
"el-cy" = -30;
"ya-cy" = -20;
};
v = {
"@MMK_R_lowercaseRound" = -70;
"@MMK_R_lowercaseStraight" = -10;
T = -240;
Y = -150;
bracketright = -90;
e = -50;
epsilon = -60;
i = -30;
j = -130;
slash = -100;
};
"vav-hb" = {
"alef-hb" = 10;
"mem-hb" = 10;
"samekh-hb" = 10;
"tav-hb" = 0;
};
w = {
"@MMK_R_dot" = -50;
"@MMK_R_lowerT" = -20;
"@MMK_R_lowercaseRound" = -60;
T = -240;
Y = -140;
a = -60;
i = -20;
j = -210;
y = -10;
};
whitelenticularbracketright = {
parenright = 50;
};
"yod-hb" = {
"@MMK_R_hebrewStraight" = 10;
"resh-hb" = 70;
};
z = {
"@MMK_R_T" = -150;
"@MMK_R_lowercaseRound" = -50;
Y = -140;
bracketright = -90;
i = -40;
j = -120;
};
zero = {
five = 0;
one = -20;
seven = -40;
};
zeroinferior = {
oneinferior = -20;
};
zerosuperior = {
onesuperior = -20;
};
zeta = {
omega = -100;
};
};
};
kerningRTL = {
m002 = {
"@MMK_R_dash" = {
"@MMK_L_lowercaseHorn" = -80;
};
};
};
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
}
);
note = "Always check \"remove overlap\" before exporting";
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Onno van den Dungen";
}
);
},
{
key = designers;
values = (
{
language = dflt;
value = "Onno van den Dungen";
}
);
},
{
key = designerURL;
value = "https://onnno.nl/";
},
{
key = licenses;
values = (
{
language = dflt;
value = "SIL Open Font License, Version 1.1";
}
);
},
{
key = licenseURL;
value = "https://openfontlicense.org/open-font-license-official-text/";
},
{
key = postscriptFullName;
value = "Arcticons Sans";
}
);
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
m01 = {
HV = "0";
};
};
};
versionMajor = 0;
versionMinor = 594;
}
